[{"D:\\code\\博客\\blog\\src\\index.js":"1","D:\\code\\博客\\blog\\src\\App.js":"2","D:\\code\\博客\\blog\\src\\components\\SiderBar\\SiderBar.js":"3","D:\\code\\博客\\blog\\src\\pages\\Detail\\Detail.js":"4","D:\\code\\博客\\blog\\src\\components\\Article\\Article.js":"5","D:\\code\\博客\\blog\\src\\hooks\\useKeyPress.js":"6","D:\\code\\博客\\blog\\src\\pages\\WriteArticle\\WriteArticle.js":"7","D:\\code\\博客\\blog\\src\\pages\\Login\\Login.js":"8","D:\\code\\博客\\blog\\src\\pages\\Reg\\Reg.js":"9","D:\\code\\博客\\blog\\src\\store\\index.js":"10","D:\\code\\博客\\blog\\src\\store\\reducer.js":"11","D:\\code\\博客\\blog\\src\\store\\actionTypes.js":"12","D:\\code\\博客\\blog\\src\\store\\actionCreators.js":"13","D:\\code\\博客\\blog\\src\\components\\Others\\Others.js":"14","D:\\code\\博客\\blog\\src\\utils\\cryp.js":"15","D:\\code\\博客\\blog\\src\\components\\Comment\\Comment.js":"16","D:\\code\\博客\\blog\\src\\utils\\date.js":"17","D:\\code\\博客\\blog\\src\\components\\BlogDetail\\BlogDetail.js":"18","D:\\code\\博客\\blog\\src\\pages\\Personal\\Personal.js":"19","D:\\code\\博客\\blog\\src\\pages\\Management\\Management.js":"20","D:\\code\\博客\\blog\\src\\components\\CommentList\\CommentList.js":"21","D:\\code\\博客\\blog\\src\\components\\PersonalInfo\\PersonalInfo.js":"22","D:\\code\\博客\\blog\\src\\components\\Upload\\Upload.js":"23","D:\\code\\博客\\blog\\src\\utils\\uploadImg.js":"24"},{"size":290,"mtime":1618796114151,"results":"25","hashOfConfig":"26"},{"size":1778,"mtime":1618796651400,"results":"27","hashOfConfig":"26"},{"size":2144,"mtime":1618738639232,"results":"28","hashOfConfig":"26"},{"size":1942,"mtime":1618738639237,"results":"29","hashOfConfig":"26"},{"size":1833,"mtime":1618738639224,"results":"30","hashOfConfig":"26"},{"size":738,"mtime":1614335129630,"results":"31","hashOfConfig":"26"},{"size":5255,"mtime":1618738639246,"results":"32","hashOfConfig":"26"},{"size":2418,"mtime":1618796608381,"results":"33","hashOfConfig":"26"},{"size":3155,"mtime":1618738639244,"results":"34","hashOfConfig":"26"},{"size":390,"mtime":1614510435223,"results":"35","hashOfConfig":"26"},{"size":1274,"mtime":1618821526309,"results":"36","hashOfConfig":"26"},{"size":308,"mtime":1618821139043,"results":"37","hashOfConfig":"26"},{"size":1592,"mtime":1618821396162,"results":"38","hashOfConfig":"26"},{"size":2438,"mtime":1618816225455,"results":"39","hashOfConfig":"26"},{"size":182,"mtime":1615191864764,"results":"40","hashOfConfig":"26"},{"size":3126,"mtime":1618738639225,"results":"41","hashOfConfig":"26"},{"size":228,"mtime":1618738639250,"results":"42","hashOfConfig":"26"},{"size":448,"mtime":1616994459257,"results":"43","hashOfConfig":"26"},{"size":1266,"mtime":1618821369875,"results":"44","hashOfConfig":"26"},{"size":1543,"mtime":1618738639240,"results":"45","hashOfConfig":"26"},{"size":1426,"mtime":1618738639226,"results":"46","hashOfConfig":"26"},{"size":2329,"mtime":1618821088346,"results":"47","hashOfConfig":"26"},{"size":1123,"mtime":1618820871316,"results":"48","hashOfConfig":"26"},{"size":385,"mtime":1618820623701,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w47ko7",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\博客\\blog\\src\\index.js",[],"D:\\code\\博客\\blog\\src\\App.js",[],"D:\\code\\博客\\blog\\src\\components\\SiderBar\\SiderBar.js",["103"],"import React , { useRef, useEffect, useState } from 'react';\r\nimport { searchArticleAction } from '../../store/actionCreators'\r\nimport store from '../../store'\r\nimport useKeypress from '../../hooks/useKeyPress'\r\nimport './SiderBar.scss';\r\nimport axios from '_axios@0.21.1@axios';\r\n\r\nconst SiderBar = () => {\r\n  const [inputActive, setinputActive] = useState(false);\r\n  const [storeData, setStoreData] = useState({})\r\n  const enterPressed = useKeypress(13);\r\n  const [tagList, setTagList] = useState([])\r\n  let searchValue = useRef(null)\r\n  const handleStoreChange = () => {\r\n    setStoreData(store.getState())\r\n  }\r\n  useEffect(() => {\r\n    handleStoreChange()\r\n    getTagList()\r\n  }, [])\r\n  useEffect(() => {\r\n    if (enterPressed && inputActive) {\r\n      store.dispatch(searchArticleAction(searchValue.current.value))\r\n      searchValue.current.value = ''\r\n    }\r\n  }, [inputActive, enterPressed])\r\n  // 获取标签列表\r\n  const getTagList = () => {\r\n    axios({\r\n      method: 'GET',\r\n      url: 'http://localhost:8080/api/tag/getTagList'\r\n    }).then(res => {\r\n      setTagList(res.data.data)\r\n    })\r\n  }\r\n  // 获取标签对应的文章\r\n  const getBlogByTag = (tag) => {\r\n    console.log(tag)\r\n  }\r\n  return (\r\n    <div className=\"sider-bar\">\r\n      {/* 搜索文章 */}\r\n      <div className=\"search\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"搜索文章\"\r\n          onFocus={() => {setinputActive(true)}}\r\n          onBlur={() => {setinputActive(false)}}\r\n          ref={searchValue}\r\n        />\r\n      </div>\r\n      {/* 文章类型 */}\r\n      <div className=\"category\">\r\n        <div className=\"category-title\">文章分类</div>\r\n        <ul className=\"category-list\"> \r\n          { tagList.map(item => {\r\n              return <li\r\n                      className=\"category-list-item\"\r\n                      onClick={() => {getBlogByTag(item.tag)}}\r\n                      key={item.id}>\r\n                        <span className=\"category-list-item-title\">{item.tag}</span>\r\n                    </li>\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default SiderBar;",["104","105"],"D:\\code\\博客\\blog\\src\\pages\\Detail\\Detail.js",[],"D:\\code\\博客\\blog\\src\\components\\Article\\Article.js",[],"D:\\code\\博客\\blog\\src\\hooks\\useKeyPress.js",["106"],"import { useState, useEffect } from 'react'\r\n\r\nconst useKeyPress = (targetKeyCode) => {\r\n  const [keyPressed, setKeyPressed] = useState(false)\r\n  \r\n  const keyDownHandler = ({ keyCode }) => {\r\n    if(keyCode === targetKeyCode) {\r\n      setKeyPressed(true)\r\n    }\r\n  }\r\n  const keyUpHandler = ({ keyCode }) => {\r\n    if(keyCode === targetKeyCode) {\r\n      setKeyPressed(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', keyDownHandler)\r\n    document.addEventListener('keyup', keyUpHandler)\r\n    return () => {\r\n      document.removeEventListener('keydown', keyDownHandler)\r\n      document.removeEventListener('keyup', keyUpHandler)     \r\n    }\r\n  }, [])\r\n  return keyPressed\r\n}\r\n\r\nexport default useKeyPress","D:\\code\\博客\\blog\\src\\pages\\WriteArticle\\WriteArticle.js",["107"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\nimport E from 'wangeditor'\r\nimport { parse } from 'html-ast-parse-stringify'\r\nimport useKeypress from '../../hooks/useKeyPress'\r\nimport transferDate from '../../utils/date'\r\nimport './style.scss'\r\nimport { message } from '_antd@4.13.0@antd';\r\nimport Upload from '../../components/Upload/Upload'\r\n\r\nlet editor = null\r\nconst WriteArticle = () => {\r\n  const [showCard, setShowCard] = useState(false)\r\n  const [tagList, setTagList] = useState([])\r\n  const [inputActive, setInputActive] = useState(false)\r\n  const [selectedTag, setSelectedTag] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const enterPressed = useKeypress(13);\r\n  let history = useHistory()\r\n  let articleTitle = useRef('') // 文章标题\r\n  let tag = useRef('') // 文章标签\r\n  let desc = useRef('') // 文章描述\r\n  // 获取标签列表\r\n  const getTagList = () => {\r\n    axios({\r\n      method: 'get',\r\n      url: 'http://localhost:8080/api/tag/getTagList',\r\n    }).then (res => {\r\n      setTagList(res.data.data)\r\n    })\r\n  }\r\n  // 创建标签\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const createTag = (tag) => {\r\n    axios({\r\n      method: 'POST',\r\n      url: 'http://localhost:8080/api/tag/createTag',\r\n      data: {\r\n        tag: tag\r\n      }\r\n    }).then (() => {\r\n      getTagList()\r\n      setSelectedTag(tag)\r\n      message.success('标签创建成功')\r\n    }).catch(e => {\r\n      message.error('标签创建失败')\r\n    })\r\n  }\r\n  // 选择标签\r\n  const selectTag = (id) => {\r\n    tagList.map(item => {\r\n      if (item.id === id) {\r\n        tag.current.value = item.tag\r\n        setSelectedTag(item.tag)\r\n      }\r\n    })\r\n  }\r\n  // 提交博客\r\n  const saveContent = () => {\r\n    let createTime = transferDate()\r\n    const data = {\r\n      title: articleTitle.current.value,\r\n      content: JSON.stringify(parse(content)),\r\n      tag: selectedTag,\r\n      createTime: createTime,\r\n      description: desc.current.value,\r\n      pic: url\r\n    }\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://localhost:8080/api/blog/createBlog',\r\n      data: data\r\n    }).then(res => {\r\n      if (res.data.status === 'ok') {\r\n        message.success('博客创建成功')\r\n        history.push('/')\r\n      } else {\r\n        message.error('博客创建失败')\r\n      }\r\n    })\r\n  }\r\n  const getImgurl = (url) => {\r\n    setUrl(url)\r\n  }\r\n  useEffect (() => {\r\n    // 处理键盘enter事件\r\n    if (enterPressed && inputActive) {\r\n      if (tag.current.value !== '') {\r\n        createTag(tag.current.value)\r\n      }\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [enterPressed, inputActive])\r\n  useEffect(() => {\r\n    // 初始化编辑器\r\n    editor = new E(\"#wang-editor\")\r\n    editor.config.onchange = function (newHtml) {\r\n      setContent(newHtml)\r\n    }\r\n    editor.create()\r\n    return () => {\r\n      editor.destroy()\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"write-wrapper\">\r\n      <header className=\"blog\">\r\n        <input \r\n          className=\"input-title\" \r\n          type=\"text\"\r\n          placeholder=\"请输入文章标题\"\r\n          ref={articleTitle}\r\n        ></input>\r\n      </header>\r\n      <div className=\"upload\">\r\n        <Upload getUploadImg={getImgurl} />\r\n      </div>\r\n      <div className=\"editor\">\r\n        <div id='wang-editor'></div>\r\n      </div>\r\n      <footer className=\"addition\">\r\n        <div className=\"tag\">\r\n          <span className=\"tag-title\">添加标签</span>\r\n          <div className=\"tag-select\">\r\n            <input \r\n              className=\"tag-select-input\"\r\n              type=\"text\"\r\n              placeholder=\"选择或创建标签\"\r\n              onFocus={() => {setShowCard(true); getTagList(); setInputActive(true)}}\r\n              onBlur={() => {setShowCard(false); setInputActive(false)}}\r\n              ref={tag}\r\n             />\r\n            <div className={showCard ? \"tag-select-card show\" : \"tag-select-card\"}>\r\n              { tagList &&\r\n                tagList.map(item => {\r\n                  return (\r\n                    <div \r\n                      className=\"tag-select-card-item\"\r\n                      key={item.id}\r\n                      onClick={() => {selectTag(item.id)}}\r\n                    >\r\n                      { item.tag }\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n              { !tagList &&\r\n                <div className='tag-select-card-none'>\r\n                  暂无标签\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"desc\">\r\n          <span className=\"desc-title\">文章描述</span>\r\n          <input \r\n            type=\"text\"\r\n            className=\"desc-input\"\r\n            placeholder=\"请输入文章描述\"\r\n            ref={desc}\r\n          />\r\n        </div>\r\n        <div className=\"publish\">\r\n          <button \r\n            className=\"publish-btn\"\r\n            onClick={() => {saveContent()}}\r\n          >发布</button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default WriteArticle;","D:\\code\\博客\\blog\\src\\pages\\Login\\Login.js",[],"D:\\code\\博客\\blog\\src\\pages\\Reg\\Reg.js",["108"],"import React, { useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport cryp from '../../utils/cryp'\r\nimport { message } from 'antd';\r\nimport { useHistory } from 'react-router-dom' \r\nimport './style.scss'\r\n\r\nconst Reg = () => {\r\n  let username = useRef('')\r\n  let password = useRef('')\r\n  let repPassword = useRef('')\r\n  let history = useHistory();\r\n  const [showTip, setShowTip] = useState(false)\r\n  const [flag, setFlag] = useState(false)\r\n  const userReg = () => {\r\n    let name = username.current.value\r\n    let pass = password.current.value\r\n    // let repPass = repPassword.current.value\r\n    let crypPassword = cryp(pass)\r\n    axios({\r\n      method: \"post\",\r\n      url: 'http://localhost:8080/api/user/reg',\r\n      data: {\r\n        username: name,\r\n        password: crypPassword,\r\n        avatar: 'https://7years-img.oss-cn-beijing.aliyuncs.com/avatar.png'\r\n      }\r\n    }).then(({ data }) => {\r\n      if (data.status === 'ok') {\r\n        message.success('注册成功', 1)\r\n        history.push('/login')\r\n      }\r\n    })\r\n  }\r\n  // 判断\r\n  const comparePass = () => {\r\n    let passOne = password.current.value\r\n    let passTwo = repPassword.current.value\r\n    if (passOne && passTwo && passOne !== passTwo) {\r\n      setShowTip(true)\r\n    } else {\r\n      setShowTip(false)\r\n    }\r\n  }\r\n  const checkUsername = () => {\r\n    let name = username.current.value\r\n    if (name.trim() !== '') {\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8080/api/user/checkName',\r\n        data: {\r\n          username: name\r\n        }\r\n      }).then(({data}) => {\r\n        if (data.status === 'fail') {\r\n          message.error(data.message, 3)\r\n          setFlag(false)\r\n        } else {\r\n          setFlag(true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"reg-wrapper\">\r\n      <div className=\"card\">\r\n        <header className=\"card-header\">\r\n          欢迎，请注册你的账号\r\n        </header>\r\n        <div className=\"card-operation\">\r\n          <div className=\"card-operation-username\">\r\n            <i className=\"iconfont icon\">&#xe60f;</i>\r\n            <input className=\"ipt\" type=\"text\" placeholder=\"请输入用户名\" ref={username} onBlur={() => {checkUsername()}} />\r\n          </div>\r\n          <div className=\"card-operation-password\">\r\n            <i className=\"iconfont icon\">&#xe608;</i>\r\n            <input className=\"ipt\" type=\"password\" placeholder=\"请输入密码\" ref={password} />\r\n          </div>\r\n          <div className=\"card-operation-password\">\r\n            <i className=\"iconfont icon\">&#xe608;</i>\r\n            <input className=\"ipt\" type=\"password\" placeholder=\"请重复你的密码\" onBlur={() => {comparePass()}} ref={repPassword} />\r\n          </div>\r\n          { showTip &&\r\n            <div className=\"card-operation-tips\">\r\n              *两次输入的密码不同\r\n            </div>\r\n          }\r\n          <div className=\"card-operation-submit\">\r\n            <button type=\"submit\" className=\"card-operation-submit-btn\" onClick={() => {userReg()}}>注册</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reg","D:\\code\\博客\\blog\\src\\store\\index.js",[],"D:\\code\\博客\\blog\\src\\store\\reducer.js",[],"D:\\code\\博客\\blog\\src\\store\\actionTypes.js",[],"D:\\code\\博客\\blog\\src\\store\\actionCreators.js",[],"D:\\code\\博客\\blog\\src\\components\\Others\\Others.js",[],"D:\\code\\博客\\blog\\src\\utils\\cryp.js",[],"D:\\code\\博客\\blog\\src\\components\\Comment\\Comment.js",[],"D:\\code\\博客\\blog\\src\\utils\\date.js",[],"D:\\code\\博客\\blog\\src\\components\\BlogDetail\\BlogDetail.js",[],"D:\\code\\博客\\blog\\src\\pages\\Personal\\Personal.js",[],"D:\\code\\博客\\blog\\src\\pages\\Management\\Management.js",[],"D:\\code\\博客\\blog\\src\\components\\CommentList\\CommentList.js",[],"D:\\code\\博客\\blog\\src\\components\\PersonalInfo\\PersonalInfo.js",[],"D:\\code\\博客\\blog\\src\\components\\Upload\\Upload.js",["109"],"D:\\code\\博客\\blog\\src\\utils\\uploadImg.js",[],{"ruleId":"110","severity":1,"message":"111","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":19},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":23,"column":6,"nodeType":"120","endLine":23,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":53,"column":22,"nodeType":"124","messageId":"125","endLine":53,"endColumn":24},{"ruleId":"110","severity":1,"message":"126","line":14,"column":10,"nodeType":"112","messageId":"113","endLine":14,"endColumn":14},{"ruleId":"110","severity":1,"message":"127","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":11},"no-unused-vars","'storeData' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'keyDownHandler' and 'keyUpHandler'. Either include them or remove the dependency array.","ArrayExpression",["130"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'flag' is assigned a value but never used.","'OSS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [keyDownHandler, keyUpHandler]",{"range":"133","text":"134"},[681,683],"[keyDownHandler, keyUpHandler]"]