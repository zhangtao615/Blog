[{"D:\\code\\博客\\blog\\src\\index.js":"1","D:\\code\\博客\\blog\\src\\App.js":"2","D:\\code\\博客\\blog\\src\\components\\SiderBar\\SiderBar.js":"3","D:\\code\\博客\\blog\\src\\pages\\Detail\\Detail.js":"4","D:\\code\\博客\\blog\\src\\components\\Article\\Article.js":"5","D:\\code\\博客\\blog\\src\\hooks\\useKeyPress.js":"6","D:\\code\\博客\\blog\\src\\store\\index.js":"7","D:\\code\\博客\\blog\\src\\store\\reducer.js":"8","D:\\code\\博客\\blog\\src\\store\\actionTypes.js":"9","D:\\code\\博客\\blog\\src\\pages\\WriteArticle\\WriteArticle.js":"10","D:\\code\\博客\\blog\\src\\pages\\Login\\Login.js":"11","D:\\code\\博客\\blog\\src\\pages\\Reg\\Reg.js":"12"},{"size":261,"mtime":1614078252446,"results":"13","hashOfConfig":"14"},{"size":2338,"mtime":1614390337533,"results":"15","hashOfConfig":"14"},{"size":2439,"mtime":1614390342791,"results":"16","hashOfConfig":"14"},{"size":1378,"mtime":1614065021746,"results":"17","hashOfConfig":"14"},{"size":1621,"mtime":1614335005287,"results":"18","hashOfConfig":"14"},{"size":738,"mtime":1614335129630,"results":"19","hashOfConfig":"14"},{"size":241,"mtime":1614055926269,"results":"20","hashOfConfig":"14"},{"size":417,"mtime":1614055965000,"results":"21","hashOfConfig":"14"},{"size":64,"mtime":1614055712962,"results":"22","hashOfConfig":"14"},{"size":3333,"mtime":1614249485326,"results":"23","hashOfConfig":"14"},{"size":1153,"mtime":1614249150636,"results":"24","hashOfConfig":"14"},{"size":124,"mtime":1614238678336,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"105yhi1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\code\\博客\\blog\\src\\index.js",[],["53","54"],"D:\\code\\博客\\blog\\src\\App.js",["55"],"D:\\code\\博客\\blog\\src\\components\\SiderBar\\SiderBar.js",["56"],"D:\\code\\博客\\blog\\src\\pages\\Detail\\Detail.js",[],"D:\\code\\博客\\blog\\src\\components\\Article\\Article.js",[],"D:\\code\\博客\\blog\\src\\hooks\\useKeyPress.js",["57"],"import { useState, useEffect } from 'react'\r\n\r\nconst useKeyPress = (targetKeyCode) => {\r\n  const [keyPressed, setKeyPressed] = useState(false)\r\n  \r\n  const keyDownHandler = ({ keyCode }) => {\r\n    if(keyCode === targetKeyCode) {\r\n      setKeyPressed(true)\r\n    }\r\n  }\r\n  const keyUpHandler = ({ keyCode }) => {\r\n    if(keyCode === targetKeyCode) {\r\n      setKeyPressed(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', keyDownHandler)\r\n    document.addEventListener('keyup', keyUpHandler)\r\n    return () => {\r\n      document.removeEventListener('keydown', keyDownHandler)\r\n      document.removeEventListener('keyup', keyUpHandler)     \r\n    }\r\n  }, [])\r\n  return keyPressed\r\n}\r\n\r\nexport default useKeyPress","D:\\code\\博客\\blog\\src\\store\\index.js",[],"D:\\code\\博客\\blog\\src\\store\\reducer.js",[],"D:\\code\\博客\\blog\\src\\store\\actionTypes.js",[],"D:\\code\\博客\\blog\\src\\pages\\WriteArticle\\WriteArticle.js",["58","59","60","61"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios'\r\nimport SimpleMDE from \"react-simplemde-editor\";\r\nimport \"easymde/dist/easymde.min.css\";\r\nimport './style.scss'\r\n\r\nconst WriteArticle = () => {\r\n  const [showCard, setShowCard] = useState(false)\r\n  const [tagList, setTagList] = useState([])\r\n  const [selectedTag, setSelectedTag] = useState('')\r\n  const [content, setContent] = useState('')\r\n  let articleTitle = useRef('')\r\n  let tag = useRef('')\r\n  let banner = useRef('')\r\n  // 获取标签列表\r\n  const getTagList = () => {\r\n    axios({\r\n      method: 'get',\r\n      url: 'http://localhost:8080/api/tag/getTagList',\r\n    }).then (res => {\r\n      setTagList(res.data.data)\r\n    })\r\n  }\r\n  // 创建标签\r\n  const createTag = () => {\r\n    axios({\r\n      method: 'POST',\r\n      url: 'http://localhost:8080/api/tag/createTag',\r\n      data: {\r\n        tag: 'test'\r\n      }\r\n    }).then (res => {\r\n      console.log(res)\r\n    })\r\n  }\r\n  // 选择标签\r\n  const selectTag = (id) => {\r\n    setSelectedTag(id)\r\n    tag.current.value = id\r\n  }\r\n  const saveContent = () => {\r\n    \r\n  }\r\n  useEffect (() => {\r\n    \r\n  }, [])\r\n  return (\r\n    <div className=\"write-wrapper\">\r\n      <header className=\"blog\">\r\n        <input \r\n          className=\"input-title\" \r\n          type=\"text\"\r\n          placeholder=\"请输入文章标题\"\r\n          ref={articleTitle}\r\n        ></input>\r\n      </header>\r\n      <div className=\"editor\">\r\n      <SimpleMDE\r\n        id=\"editor\"\r\n        options={{\r\n          autofocus: true,\r\n          spellChecker: false\r\n        }}\r\n      />\r\n      </div>\r\n      <footer className=\"addition\">\r\n        <div className=\"tag\">\r\n          <span className=\"tag-title\">添加标签</span>\r\n          <div className=\"tag-select\">\r\n            <input \r\n              className=\"tag-select-input\"\r\n              type=\"text\"\r\n              placeholder=\"选择或创建标签\"\r\n              onFocus={() => {setShowCard(true); getTagList()}}\r\n              onBlur={() => {setShowCard(false)}}\r\n              ref={tag}\r\n             />\r\n            <div className={showCard ? \"tag-select-card show\" : \"tag-select-card\"}>\r\n              { tagList &&\r\n                tagList.map(item => {\r\n                  return (\r\n                    <div \r\n                      className=\"tag-select-card-item\"\r\n                      key={item.id}\r\n                      onClick={() => {selectTag(item.id)}}\r\n                    >\r\n                      { item.tag }\r\n                    </div>\r\n                  )\r\n                })\r\n              }\r\n              { !tagList &&\r\n                <div className='tag-select-card-none'>\r\n                  暂无标签\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"banner\">\r\n          <span className=\"banner-title\">图片封面</span>\r\n          <input \r\n            type=\"text\"\r\n            className=\"banner-input\"\r\n            placeholder=\"请输入图片链接\"\r\n            ref={banner}\r\n          />\r\n        </div>\r\n        <div className=\"publish\">\r\n          <button \r\n            className=\"publish-btn\"\r\n            onClick={() => {saveContent()}}\r\n          >发布</button>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default WriteArticle;","D:\\code\\博客\\blog\\src\\pages\\Login\\Login.js",[],"D:\\code\\博客\\blog\\src\\pages\\Reg\\Reg.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":19,"column":19,"nodeType":"68","messageId":"69","endLine":19,"endColumn":29},{"ruleId":"66","severity":1,"message":"70","line":19,"column":11,"nodeType":"68","messageId":"69","endLine":19,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":23,"column":6,"nodeType":"73","endLine":23,"endColumn":8,"suggestions":"74"},{"ruleId":"66","severity":1,"message":"75","line":10,"column":10,"nodeType":"68","messageId":"69","endLine":10,"endColumn":21},{"ruleId":"66","severity":1,"message":"76","line":11,"column":10,"nodeType":"68","messageId":"69","endLine":11,"endColumn":17},{"ruleId":"66","severity":1,"message":"77","line":11,"column":19,"nodeType":"68","messageId":"69","endLine":11,"endColumn":29},{"ruleId":"66","severity":1,"message":"78","line":25,"column":9,"nodeType":"68","messageId":"69","endLine":25,"endColumn":18},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'setIsLogin' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'keyDownHandler' and 'keyUpHandler'. Either include them or remove the dependency array.","ArrayExpression",["81"],"'selectedTag' is assigned a value but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'createTag' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [keyDownHandler, keyUpHandler]",{"range":"84","text":"85"},[681,683],"[keyDownHandler, keyUpHandler]"]